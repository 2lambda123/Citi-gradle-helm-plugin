public final class com/citi/gradle/plugins/helm/publishing/HelmPublishPlugin : org/gradle/api/Plugin {
	public fun <init> (Lorg/gradle/internal/reflect/Instantiator;)V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class com/citi/gradle/plugins/helm/publishing/HelmPublishPluginConstantsKt {
	public static final field HELM_CHART_PUBLISHING_CONVENTION_NAME Ljava/lang/String;
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
	public abstract fun getTenantIds ()Lorg/gradle/api/provider/ListProperty;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/CustomHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
	public abstract fun getMultipartForm ()Lorg/gradle/api/provider/Property;
	public abstract fun getUploadMethod ()Lorg/gradle/api/provider/Property;
	public abstract fun getUploadPath ()Lorg/gradle/api/provider/Property;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/CustomHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/CustomHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/CustomHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
	public abstract fun getProjectId ()Lorg/gradle/api/provider/Property;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
	public abstract fun getProjectName ()Lorg/gradle/api/provider/Property;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/HelmChartPublishConvention {
	public abstract fun getPublish ()Lorg/gradle/api/provider/Property;
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingExtension {
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository : com/citi/gradle/plugins/helm/dsl/credentials/CredentialsContainer, org/gradle/api/Named {
	public abstract fun getUrl ()Lorg/gradle/api/provider/Property;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer : org/gradle/api/PolymorphicDomainObjectContainer {
	public abstract fun artifactory (Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;
	public abstract fun artifactory (Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;
	public abstract fun chartMuseum (Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;
	public abstract fun chartMuseum (Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;
	public abstract fun gitlab (Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;
	public abstract fun gitlab (Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;
	public abstract fun harbor (Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;
	public abstract fun harbor (Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;
	public abstract fun nexus (Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;
	public abstract fun nexus (Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer$DefaultImpls {
	public static fun artifactory (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;
	public static fun artifactory (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ArtifactoryHelmPublishingRepository;
	public static fun chartMuseum (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;
	public static fun chartMuseum (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/ChartMuseumHelmPublishingRepository;
	public static fun gitlab (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;
	public static fun gitlab (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/GitlabHelmPublishingRepository;
	public static fun harbor (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;
	public static fun harbor (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/HarborHelmPublishingRepository;
	public static fun nexus (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Ljava/lang/String;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;
	public static fun nexus (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepositoryContainer;Lorg/gradle/api/Action;)Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;
}

public abstract interface class com/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository : com/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository {
	public abstract fun getApiVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getRepository ()Lorg/gradle/api/provider/Property;
}

public final class com/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository$DefaultImpls {
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;Lgroovy/lang/Closure;)V
	public static fun credentials (Lcom/citi/gradle/plugins/helm/publishing/dsl/NexusHelmPublishingRepository;Ljava/lang/Class;Lgroovy/lang/Closure;)V
}

public final class com/citi/gradle/plugins/helm/publishing/rules/HelmPublishChartTaskRuleKt {
	public static final fun getPublishTaskName (Lcom/citi/gradle/plugins/helm/dsl/HelmChart;)Ljava/lang/String;
}

public class com/citi/gradle/plugins/helm/publishing/tasks/HelmPublishChart : org/gradle/api/DefaultTask {
	public fun <init> (Lorg/gradle/workers/WorkerExecutor;)V
	public final fun getChartFile ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getChartName ()Lorg/gradle/api/provider/Property;
	public final fun getChartVersion ()Lorg/gradle/api/provider/Property;
	public final fun getTargetRepository ()Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository;
	public final fun publish ()V
	public final fun setTargetRepository (Lcom/citi/gradle/plugins/helm/publishing/dsl/HelmPublishingRepository;)V
}

public final class com/citi/gradle/plugins/helm/publishing/util/RequestBodyExtensionsKt {
	public static final fun toMultipartBody (Lokhttp3/RequestBody;Ljava/lang/String;)Lokhttp3/MultipartBody;
}

public final class org/gradle/kotlin/dsl/HelmPublishPluginExtensionAccessors {
	public static final fun getPublish (Lcom/citi/gradle/plugins/helm/dsl/HelmChart;)Lorg/gradle/api/provider/Property;
}

